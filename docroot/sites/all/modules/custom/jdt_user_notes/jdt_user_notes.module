<?php
/*
* Implements hook_permissions
*/
function jdt_user_notes_simpletest() {
  $dir = drupal_get_path('module', 'jdt_user_notes');
  $tests = file_scan_directory($dir, '\.test$');
  return array_keys($tests);
}
/*
* Creates Standard Permissions
*/
function jdt_user_notes_permission(){
  return array(
	  'jdt_user_notes' => array( 
		  'title' => t('Administer Notes'),
			'description' => t('Perform administration tasks for notes.'),
		),
	);
}

/**
* Read
*/
function jdt_user_notes_entry_load($entry = array()){
  $select = db_select('user_note', 'drupal7_development');
  $select->fields('drupal7_development');
	// Add each field and value as a condition to this query.
    foreach ($entry as $field => $value) {
      $select->condition($field, $value);
  	}
  	// Return the result in object format.
  return $select->execute()->fetchAll();
}

/**
* Add
*/
function jdt_user_notes_insert($entry){
  $return_value = NULL;
  try{
	  $return_value = db_insert('user_note')
                    ->fields($entry)
                    ->execute();
    }
	catch(Exception $e){
	  drupal_set_message(t('db_insert failed. Message = %message, query= %query',
      		array('%message' => $e->getMessage(), '%query' => $e->query_string)), 'error');
	}
	return $return_value;
}

/**
* Delete
*/
function jdt_user_notes_delete($entry){
  db_delete('user_note')
    ->condition('note_id', $entry['note_id'])
    ->execute();
}

/**
* Edit
*/
function jdt_user_notes_update($entry){
  try {
    // db_update()...->execute() returns the number of rows updated.
    $count = db_update('user_note')
            	->fields($entry)
            	->condition('note_id', $entry['note_id'])
              ->execute();
    }
  	catch (Exception $e) {
      drupal_set_message(t('db_update failed. Message = %message, query= %query',
        array('%message' => $e->getMessage(), '%query' => $e->query_string)), 'error');
  	}
  	return $count;
}
